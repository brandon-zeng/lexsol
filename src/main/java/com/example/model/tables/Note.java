/**
 * This class is generated by jOOQ
 */
package com.example.model.tables;


import com.example.model.Keys;
import com.example.model.Public;
import com.example.model.tables.records.NoteRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Note extends TableImpl<NoteRecord> {

	private static final long serialVersionUID = 1776263594;

	/**
	 * The reference instance of <code>public.note</code>
	 */
	public static final Note NOTE = new Note();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NoteRecord> getRecordType() {
		return NoteRecord.class;
	}

	/**
	 * The column <code>public.note.id</code>.
	 */
	public final TableField<NoteRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.note.tenant_id</code>.
	 */
	public final TableField<NoteRecord, Integer> TENANT_ID = createField("tenant_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.note.notetype_id</code>.
	 */
	public final TableField<NoteRecord, Integer> NOTETYPE_ID = createField("notetype_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.note.property_id</code>.
	 */
	public final TableField<NoteRecord, Integer> PROPERTY_ID = createField("property_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.note.sitevisit_id</code>.
	 */
	public final TableField<NoteRecord, Integer> SITEVISIT_ID = createField("sitevisit_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.note.notedate</code>.
	 */
	public final TableField<NoteRecord, Timestamp> NOTEDATE = createField("notedate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>public.note.secondarydate</code>.
	 */
	public final TableField<NoteRecord, Timestamp> SECONDARYDATE = createField("secondarydate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>public.note.note</code>.
	 */
	public final TableField<NoteRecord, String> NOTE_ = createField("note", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.note.createddate</code>.
	 */
	public final TableField<NoteRecord, Timestamp> CREATEDDATE = createField("createddate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>public.note.createdby</code>.
	 */
	public final TableField<NoteRecord, Integer> CREATEDBY = createField("createdby", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.note.lastmodifieddate</code>.
	 */
	public final TableField<NoteRecord, Timestamp> LASTMODIFIEDDATE = createField("lastmodifieddate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>public.note.secondarydatechangedby_id</code>.
	 */
	public final TableField<NoteRecord, Integer> SECONDARYDATECHANGEDBY_ID = createField("secondarydatechangedby_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.note.secondarydatechangedate</code>.
	 */
	public final TableField<NoteRecord, Timestamp> SECONDARYDATECHANGEDATE = createField("secondarydatechangedate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>public.note.dealissues</code>.
	 */
	public final TableField<NoteRecord, String> DEALISSUES = createField("dealissues", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.note.discussionpoints</code>.
	 */
	public final TableField<NoteRecord, String> DISCUSSIONPOINTS = createField("discussionpoints", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>public.note</code> table reference
	 */
	public Note() {
		this("note", null);
	}

	/**
	 * Create an aliased <code>public.note</code> table reference
	 */
	public Note(String alias) {
		this(alias, NOTE);
	}

	private Note(String alias, Table<NoteRecord> aliased) {
		this(alias, aliased, null);
	}

	private Note(String alias, Table<NoteRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NoteRecord> getPrimaryKey() {
		return Keys.NOTE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NoteRecord>> getKeys() {
		return Arrays.<UniqueKey<NoteRecord>>asList(Keys.NOTE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<NoteRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<NoteRecord, ?>>asList(Keys.NOTE__NOTE_TENANT_ID_FKEY, Keys.NOTE__NOTE_NOTETYPE_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Note as(String alias) {
		return new Note(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Note rename(String name) {
		return new Note(name, null);
	}
}
