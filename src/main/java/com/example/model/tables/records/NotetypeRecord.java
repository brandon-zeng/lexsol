/**
 * This class is generated by jOOQ
 */
package com.example.model.tables.records;


import com.example.model.tables.Notetype;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotetypeRecord extends UpdatableRecordImpl<NotetypeRecord> implements Record8<Integer, String, Integer, Boolean, Integer, Boolean, Integer, Object> {

	private static final long serialVersionUID = -1667758263;

	/**
	 * Setter for <code>public.notetype.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.notetype.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.notetype.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.notetype.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.notetype.tenant_id</code>.
	 */
	public void setTenantId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.notetype.tenant_id</code>.
	 */
	public Integer getTenantId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>public.notetype.secondarydate</code>.
	 */
	public void setSecondarydate(Boolean value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.notetype.secondarydate</code>.
	 */
	public Boolean getSecondarydate() {
		return (Boolean) getValue(3);
	}

	/**
	 * Setter for <code>public.notetype.sitevisit_id</code>.
	 */
	public void setSitevisitId(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.notetype.sitevisit_id</code>.
	 */
	public Integer getSitevisitId() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>public.notetype.showdealissues</code>.
	 */
	public void setShowdealissues(Boolean value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.notetype.showdealissues</code>.
	 */
	public Boolean getShowdealissues() {
		return (Boolean) getValue(5);
	}

	/**
	 * Setter for <code>public.notetype.deletepermittedinterval</code>.
	 */
	public void setDeletepermittedinterval(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.notetype.deletepermittedinterval</code>.
	 */
	public Integer getDeletepermittedinterval() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>public.notetype.discussiontopics</code>.
	 */
	public void setDiscussiontopics(Object value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.notetype.discussiontopics</code>.
	 */
	public Object getDiscussiontopics() {
		return (Object) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, String, Integer, Boolean, Integer, Boolean, Integer, Object> fieldsRow() {
		return (Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, String, Integer, Boolean, Integer, Boolean, Integer, Object> valuesRow() {
		return (Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Notetype.NOTETYPE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Notetype.NOTETYPE.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Notetype.NOTETYPE.TENANT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field4() {
		return Notetype.NOTETYPE.SECONDARYDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Notetype.NOTETYPE.SITEVISIT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field6() {
		return Notetype.NOTETYPE.SHOWDEALISSUES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return Notetype.NOTETYPE.DELETEPERMITTEDINTERVAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Object> field8() {
		return Notetype.NOTETYPE.DISCUSSIONTOPICS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getTenantId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value4() {
		return getSecondarydate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getSitevisitId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value6() {
		return getShowdealissues();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getDeletepermittedinterval();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object value8() {
		return getDiscussiontopics();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotetypeRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotetypeRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotetypeRecord value3(Integer value) {
		setTenantId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotetypeRecord value4(Boolean value) {
		setSecondarydate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotetypeRecord value5(Integer value) {
		setSitevisitId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotetypeRecord value6(Boolean value) {
		setShowdealissues(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotetypeRecord value7(Integer value) {
		setDeletepermittedinterval(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotetypeRecord value8(Object value) {
		setDiscussiontopics(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotetypeRecord values(Integer value1, String value2, Integer value3, Boolean value4, Integer value5, Boolean value6, Integer value7, Object value8) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached NotetypeRecord
	 */
	public NotetypeRecord() {
		super(Notetype.NOTETYPE);
	}

	/**
	 * Create a detached, initialised NotetypeRecord
	 */
	public NotetypeRecord(Integer id, String name, Integer tenantId, Boolean secondarydate, Integer sitevisitId, Boolean showdealissues, Integer deletepermittedinterval, Object discussiontopics) {
		super(Notetype.NOTETYPE);

		setValue(0, id);
		setValue(1, name);
		setValue(2, tenantId);
		setValue(3, secondarydate);
		setValue(4, sitevisitId);
		setValue(5, showdealissues);
		setValue(6, deletepermittedinterval);
		setValue(7, discussiontopics);
	}
}
