/**
 * This class is generated by jOOQ
 */
package com.example.model.tables;


import com.example.model.Keys;
import com.example.model.Public;
import com.example.model.tables.records.NotetypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Notetype extends TableImpl<NotetypeRecord> {

	private static final long serialVersionUID = 1599509218;

	/**
	 * The reference instance of <code>public.notetype</code>
	 */
	public static final Notetype NOTETYPE = new Notetype();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NotetypeRecord> getRecordType() {
		return NotetypeRecord.class;
	}

	/**
	 * The column <code>public.notetype.id</code>.
	 */
	public final TableField<NotetypeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.notetype.name</code>.
	 */
	public final TableField<NotetypeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>public.notetype.tenant_id</code>.
	 */
	public final TableField<NotetypeRecord, Integer> TENANT_ID = createField("tenant_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.notetype.secondarydate</code>.
	 */
	public final TableField<NotetypeRecord, Boolean> SECONDARYDATE = createField("secondarydate", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>public.notetype.sitevisit_id</code>.
	 */
	public final TableField<NotetypeRecord, Integer> SITEVISIT_ID = createField("sitevisit_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.notetype.showdealissues</code>.
	 */
	public final TableField<NotetypeRecord, Boolean> SHOWDEALISSUES = createField("showdealissues", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>public.notetype.deletepermittedinterval</code>.
	 */
	public final TableField<NotetypeRecord, Integer> DELETEPERMITTEDINTERVAL = createField("deletepermittedinterval", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.notetype.discussiontopics</code>.
	 */
	public final TableField<NotetypeRecord, String> DISCUSSIONTOPICS = createField("discussiontopics", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>public.notetype</code> table reference
	 */
	public Notetype() {
		this("notetype", null);
	}

	/**
	 * Create an aliased <code>public.notetype</code> table reference
	 */
	public Notetype(String alias) {
		this(alias, NOTETYPE);
	}

	private Notetype(String alias, Table<NotetypeRecord> aliased) {
		this(alias, aliased, null);
	}

	private Notetype(String alias, Table<NotetypeRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NotetypeRecord> getPrimaryKey() {
		return Keys.NOTETYPE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NotetypeRecord>> getKeys() {
		return Arrays.<UniqueKey<NotetypeRecord>>asList(Keys.NOTETYPE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<NotetypeRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<NotetypeRecord, ?>>asList(Keys.NOTETYPE__NOTETYPE_TENANT_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Notetype as(String alias) {
		return new Notetype(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Notetype rename(String name) {
		return new Notetype(name, null);
	}
}
