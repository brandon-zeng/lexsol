/**
 * This class is generated by jOOQ
 */
package com.example.model;


import com.example.model.tables.Note;
import com.example.model.tables.Notetype;
import com.example.model.tables.SchemaVersion;
import com.example.model.tables.Tenant;
import com.example.model.tables.records.NoteRecord;
import com.example.model.tables.records.NotetypeRecord;
import com.example.model.tables.records.SchemaVersionRecord;
import com.example.model.tables.records.TenantRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<NoteRecord> NOTE_PKEY = UniqueKeys0.NOTE_PKEY;
	public static final UniqueKey<NotetypeRecord> NOTETYPE_PKEY = UniqueKeys0.NOTETYPE_PKEY;
	public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PK = UniqueKeys0.SCHEMA_VERSION_PK;
	public static final UniqueKey<TenantRecord> TENANT_PKEY = UniqueKeys0.TENANT_PKEY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<NoteRecord, TenantRecord> NOTE__NOTE_TENANT_ID_FKEY = ForeignKeys0.NOTE__NOTE_TENANT_ID_FKEY;
	public static final ForeignKey<NoteRecord, NotetypeRecord> NOTE__NOTE_NOTETYPE_ID_FKEY = ForeignKeys0.NOTE__NOTE_NOTETYPE_ID_FKEY;
	public static final ForeignKey<NotetypeRecord, TenantRecord> NOTETYPE__NOTETYPE_TENANT_ID_FKEY = ForeignKeys0.NOTETYPE__NOTETYPE_TENANT_ID_FKEY;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<NoteRecord> NOTE_PKEY = createUniqueKey(Note.NOTE, Note.NOTE.ID);
		public static final UniqueKey<NotetypeRecord> NOTETYPE_PKEY = createUniqueKey(Notetype.NOTETYPE, Notetype.NOTETYPE.ID);
		public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PK = createUniqueKey(SchemaVersion.SCHEMA_VERSION, SchemaVersion.SCHEMA_VERSION.INSTALLED_RANK);
		public static final UniqueKey<TenantRecord> TENANT_PKEY = createUniqueKey(Tenant.TENANT, Tenant.TENANT.ID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<NoteRecord, TenantRecord> NOTE__NOTE_TENANT_ID_FKEY = createForeignKey(com.example.model.Keys.TENANT_PKEY, Note.NOTE, Note.NOTE.TENANT_ID);
		public static final ForeignKey<NoteRecord, NotetypeRecord> NOTE__NOTE_NOTETYPE_ID_FKEY = createForeignKey(com.example.model.Keys.NOTETYPE_PKEY, Note.NOTE, Note.NOTE.NOTETYPE_ID);
		public static final ForeignKey<NotetypeRecord, TenantRecord> NOTETYPE__NOTETYPE_TENANT_ID_FKEY = createForeignKey(com.example.model.Keys.TENANT_PKEY, Notetype.NOTETYPE, Notetype.NOTETYPE.TENANT_ID);
	}
}
